<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="9" skipped="0" tests="9" time="1.042" timestamp="2025-07-04T19:57:49.022473+02:00" hostname="DANIELs-MacBook-Pro.local"><testcase classname="test.unit.TestToDo.TestDatabaseFunctions" name="test_delete_todo" time="0.134"><failure message="KeyError: 'DYNAMODB_TABLE'">self = &lt;TestToDo.TestDatabaseFunctions testMethod=test_delete_todo&gt;

    def setUp(self):
        print ('---------------------')
        print ('Start: setUp')
        warnings.filterwarnings(
            "ignore",
            category=ResourceWarning,
            message="unclosed.*&lt;socket.socket.*&gt;")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="callable is None.*")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="Using or importing.*")
        """Create the mock database and table"""
        self.dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
        self.is_local = 'true'
        self.uuid = "123e4567-e89b-12d3-a456-426614174000"
        self.text = "Aprender DevOps y Cloud en la UNIR"
    
        from src.todoList import create_todo_table
&gt;       self.table = create_todo_table(self.dynamodb)

test/unit/TestToDo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/todoList.py:121: in create_todo_table
    tableName = os.environ['DYNAMODB_TABLE']
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = environ({'TMPDIR': '/var/folders/07/7vkgc4v92n3975vd8qsdl9980000gn/T/', '__CFBundleIdentifier': 'com.apple.Terminal', ...EST_VERSION': '8.3.5', 'PYTEST_CURRENT_TEST': 'test/unit/TestToDo.py::TestDatabaseFunctions::test_delete_todo (call)'})
key = 'DYNAMODB_TABLE'

&gt;   ???
E   KeyError: 'DYNAMODB_TABLE'

&lt;frozen os&gt;:678: KeyError</failure></testcase><testcase classname="test.unit.TestToDo.TestDatabaseFunctions" name="test_delete_todo_error" time="0.094"><failure message="KeyError: 'DYNAMODB_TABLE'">self = &lt;TestToDo.TestDatabaseFunctions testMethod=test_delete_todo_error&gt;

    def setUp(self):
        print ('---------------------')
        print ('Start: setUp')
        warnings.filterwarnings(
            "ignore",
            category=ResourceWarning,
            message="unclosed.*&lt;socket.socket.*&gt;")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="callable is None.*")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="Using or importing.*")
        """Create the mock database and table"""
        self.dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
        self.is_local = 'true'
        self.uuid = "123e4567-e89b-12d3-a456-426614174000"
        self.text = "Aprender DevOps y Cloud en la UNIR"
    
        from src.todoList import create_todo_table
&gt;       self.table = create_todo_table(self.dynamodb)

test/unit/TestToDo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/todoList.py:121: in create_todo_table
    tableName = os.environ['DYNAMODB_TABLE']
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = environ({'TMPDIR': '/var/folders/07/7vkgc4v92n3975vd8qsdl9980000gn/T/', '__CFBundleIdentifier': 'com.apple.Terminal', ...RSION': '8.3.5', 'PYTEST_CURRENT_TEST': 'test/unit/TestToDo.py::TestDatabaseFunctions::test_delete_todo_error (call)'})
key = 'DYNAMODB_TABLE'

&gt;   ???
E   KeyError: 'DYNAMODB_TABLE'

&lt;frozen os&gt;:678: KeyError</failure></testcase><testcase classname="test.unit.TestToDo.TestDatabaseFunctions" name="test_get_todo" time="0.059"><failure message="KeyError: 'DYNAMODB_TABLE'">self = &lt;TestToDo.TestDatabaseFunctions testMethod=test_get_todo&gt;

    def setUp(self):
        print ('---------------------')
        print ('Start: setUp')
        warnings.filterwarnings(
            "ignore",
            category=ResourceWarning,
            message="unclosed.*&lt;socket.socket.*&gt;")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="callable is None.*")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="Using or importing.*")
        """Create the mock database and table"""
        self.dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
        self.is_local = 'true'
        self.uuid = "123e4567-e89b-12d3-a456-426614174000"
        self.text = "Aprender DevOps y Cloud en la UNIR"
    
        from src.todoList import create_todo_table
&gt;       self.table = create_todo_table(self.dynamodb)

test/unit/TestToDo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/todoList.py:121: in create_todo_table
    tableName = os.environ['DYNAMODB_TABLE']
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = environ({'TMPDIR': '/var/folders/07/7vkgc4v92n3975vd8qsdl9980000gn/T/', '__CFBundleIdentifier': 'com.apple.Terminal', ...PYTEST_VERSION': '8.3.5', 'PYTEST_CURRENT_TEST': 'test/unit/TestToDo.py::TestDatabaseFunctions::test_get_todo (call)'})
key = 'DYNAMODB_TABLE'

&gt;   ???
E   KeyError: 'DYNAMODB_TABLE'

&lt;frozen os&gt;:678: KeyError</failure></testcase><testcase classname="test.unit.TestToDo.TestDatabaseFunctions" name="test_list_todo" time="0.060"><failure message="KeyError: 'DYNAMODB_TABLE'">self = &lt;TestToDo.TestDatabaseFunctions testMethod=test_list_todo&gt;

    def setUp(self):
        print ('---------------------')
        print ('Start: setUp')
        warnings.filterwarnings(
            "ignore",
            category=ResourceWarning,
            message="unclosed.*&lt;socket.socket.*&gt;")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="callable is None.*")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="Using or importing.*")
        """Create the mock database and table"""
        self.dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
        self.is_local = 'true'
        self.uuid = "123e4567-e89b-12d3-a456-426614174000"
        self.text = "Aprender DevOps y Cloud en la UNIR"
    
        from src.todoList import create_todo_table
&gt;       self.table = create_todo_table(self.dynamodb)

test/unit/TestToDo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/todoList.py:121: in create_todo_table
    tableName = os.environ['DYNAMODB_TABLE']
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = environ({'TMPDIR': '/var/folders/07/7vkgc4v92n3975vd8qsdl9980000gn/T/', '__CFBundleIdentifier': 'com.apple.Terminal', ...YTEST_VERSION': '8.3.5', 'PYTEST_CURRENT_TEST': 'test/unit/TestToDo.py::TestDatabaseFunctions::test_list_todo (call)'})
key = 'DYNAMODB_TABLE'

&gt;   ???
E   KeyError: 'DYNAMODB_TABLE'

&lt;frozen os&gt;:678: KeyError</failure></testcase><testcase classname="test.unit.TestToDo.TestDatabaseFunctions" name="test_put_todo" time="0.117"><failure message="KeyError: 'DYNAMODB_TABLE'">self = &lt;TestToDo.TestDatabaseFunctions testMethod=test_put_todo&gt;

    def setUp(self):
        print ('---------------------')
        print ('Start: setUp')
        warnings.filterwarnings(
            "ignore",
            category=ResourceWarning,
            message="unclosed.*&lt;socket.socket.*&gt;")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="callable is None.*")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="Using or importing.*")
        """Create the mock database and table"""
        self.dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
        self.is_local = 'true'
        self.uuid = "123e4567-e89b-12d3-a456-426614174000"
        self.text = "Aprender DevOps y Cloud en la UNIR"
    
        from src.todoList import create_todo_table
&gt;       self.table = create_todo_table(self.dynamodb)

test/unit/TestToDo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/todoList.py:121: in create_todo_table
    tableName = os.environ['DYNAMODB_TABLE']
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = environ({'TMPDIR': '/var/folders/07/7vkgc4v92n3975vd8qsdl9980000gn/T/', '__CFBundleIdentifier': 'com.apple.Terminal', ...PYTEST_VERSION': '8.3.5', 'PYTEST_CURRENT_TEST': 'test/unit/TestToDo.py::TestDatabaseFunctions::test_put_todo (call)'})
key = 'DYNAMODB_TABLE'

&gt;   ???
E   KeyError: 'DYNAMODB_TABLE'

&lt;frozen os&gt;:678: KeyError</failure></testcase><testcase classname="test.unit.TestToDo.TestDatabaseFunctions" name="test_put_todo_error" time="0.058"><failure message="KeyError: 'DYNAMODB_TABLE'">self = &lt;TestToDo.TestDatabaseFunctions testMethod=test_put_todo_error&gt;

    def setUp(self):
        print ('---------------------')
        print ('Start: setUp')
        warnings.filterwarnings(
            "ignore",
            category=ResourceWarning,
            message="unclosed.*&lt;socket.socket.*&gt;")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="callable is None.*")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="Using or importing.*")
        """Create the mock database and table"""
        self.dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
        self.is_local = 'true'
        self.uuid = "123e4567-e89b-12d3-a456-426614174000"
        self.text = "Aprender DevOps y Cloud en la UNIR"
    
        from src.todoList import create_todo_table
&gt;       self.table = create_todo_table(self.dynamodb)

test/unit/TestToDo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/todoList.py:121: in create_todo_table
    tableName = os.environ['DYNAMODB_TABLE']
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = environ({'TMPDIR': '/var/folders/07/7vkgc4v92n3975vd8qsdl9980000gn/T/', '__CFBundleIdentifier': 'com.apple.Terminal', ..._VERSION': '8.3.5', 'PYTEST_CURRENT_TEST': 'test/unit/TestToDo.py::TestDatabaseFunctions::test_put_todo_error (call)'})
key = 'DYNAMODB_TABLE'

&gt;   ???
E   KeyError: 'DYNAMODB_TABLE'

&lt;frozen os&gt;:678: KeyError</failure></testcase><testcase classname="test.unit.TestToDo.TestDatabaseFunctions" name="test_table_exists" time="0.058"><failure message="KeyError: 'DYNAMODB_TABLE'">self = &lt;TestToDo.TestDatabaseFunctions testMethod=test_table_exists&gt;

    def setUp(self):
        print ('---------------------')
        print ('Start: setUp')
        warnings.filterwarnings(
            "ignore",
            category=ResourceWarning,
            message="unclosed.*&lt;socket.socket.*&gt;")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="callable is None.*")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="Using or importing.*")
        """Create the mock database and table"""
        self.dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
        self.is_local = 'true'
        self.uuid = "123e4567-e89b-12d3-a456-426614174000"
        self.text = "Aprender DevOps y Cloud en la UNIR"
    
        from src.todoList import create_todo_table
&gt;       self.table = create_todo_table(self.dynamodb)

test/unit/TestToDo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/todoList.py:121: in create_todo_table
    tableName = os.environ['DYNAMODB_TABLE']
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = environ({'TMPDIR': '/var/folders/07/7vkgc4v92n3975vd8qsdl9980000gn/T/', '__CFBundleIdentifier': 'com.apple.Terminal', ...ST_VERSION': '8.3.5', 'PYTEST_CURRENT_TEST': 'test/unit/TestToDo.py::TestDatabaseFunctions::test_table_exists (call)'})
key = 'DYNAMODB_TABLE'

&gt;   ???
E   KeyError: 'DYNAMODB_TABLE'

&lt;frozen os&gt;:678: KeyError</failure></testcase><testcase classname="test.unit.TestToDo.TestDatabaseFunctions" name="test_update_todo" time="0.126"><failure message="KeyError: 'DYNAMODB_TABLE'">self = &lt;TestToDo.TestDatabaseFunctions testMethod=test_update_todo&gt;

    def setUp(self):
        print ('---------------------')
        print ('Start: setUp')
        warnings.filterwarnings(
            "ignore",
            category=ResourceWarning,
            message="unclosed.*&lt;socket.socket.*&gt;")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="callable is None.*")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="Using or importing.*")
        """Create the mock database and table"""
        self.dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
        self.is_local = 'true'
        self.uuid = "123e4567-e89b-12d3-a456-426614174000"
        self.text = "Aprender DevOps y Cloud en la UNIR"
    
        from src.todoList import create_todo_table
&gt;       self.table = create_todo_table(self.dynamodb)

test/unit/TestToDo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/todoList.py:121: in create_todo_table
    tableName = os.environ['DYNAMODB_TABLE']
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = environ({'TMPDIR': '/var/folders/07/7vkgc4v92n3975vd8qsdl9980000gn/T/', '__CFBundleIdentifier': 'com.apple.Terminal', ...EST_VERSION': '8.3.5', 'PYTEST_CURRENT_TEST': 'test/unit/TestToDo.py::TestDatabaseFunctions::test_update_todo (call)'})
key = 'DYNAMODB_TABLE'

&gt;   ???
E   KeyError: 'DYNAMODB_TABLE'

&lt;frozen os&gt;:678: KeyError</failure></testcase><testcase classname="test.unit.TestToDo.TestDatabaseFunctions" name="test_update_todo_error" time="0.068"><failure message="KeyError: 'DYNAMODB_TABLE'">self = &lt;TestToDo.TestDatabaseFunctions testMethod=test_update_todo_error&gt;

    def setUp(self):
        print ('---------------------')
        print ('Start: setUp')
        warnings.filterwarnings(
            "ignore",
            category=ResourceWarning,
            message="unclosed.*&lt;socket.socket.*&gt;")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="callable is None.*")
        warnings.filterwarnings(
            "ignore",
            category=DeprecationWarning,
            message="Using or importing.*")
        """Create the mock database and table"""
        self.dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
        self.is_local = 'true'
        self.uuid = "123e4567-e89b-12d3-a456-426614174000"
        self.text = "Aprender DevOps y Cloud en la UNIR"
    
        from src.todoList import create_todo_table
&gt;       self.table = create_todo_table(self.dynamodb)

test/unit/TestToDo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/todoList.py:121: in create_todo_table
    tableName = os.environ['DYNAMODB_TABLE']
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = environ({'TMPDIR': '/var/folders/07/7vkgc4v92n3975vd8qsdl9980000gn/T/', '__CFBundleIdentifier': 'com.apple.Terminal', ...RSION': '8.3.5', 'PYTEST_CURRENT_TEST': 'test/unit/TestToDo.py::TestDatabaseFunctions::test_update_todo_error (call)'})
key = 'DYNAMODB_TABLE'

&gt;   ???
E   KeyError: 'DYNAMODB_TABLE'

&lt;frozen os&gt;:678: KeyError</failure></testcase></testsuite></testsuites>